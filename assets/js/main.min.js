'use strict';

var dataUrls = 'assets/data/codework-70eaa-export.json',
    currentDisplayCollections = [],
    // Store all projects on the current screen
mixer,
    currentFilterValue = 'all',
    // Current filter tag value, set 'all' as default
numberOfPagesPerPage = 10;

// Load more button
var loadMoreBtnObj = {
    jQDom: $('#loadmore-btn'),

    setPage: function setPage(page) {
        this.jQDom.data('page', page);
    },

    // Get current page number, 0 as default
    getPage: function getPage() {
        return this.jQDom.data('page') || 0;
    },

    // Change 'Load More' to 'Loading..'
    setStatusToLoading: function setStatusToLoading() {
        this.jQDom.show().prop('disabled', true).find('#loadmore-btn--normal').hide().end().find('#loadmore-btn--loading').fadeIn('slow');
    },

    // Change 'Loading..' to 'Load More'
    setStatusToNormal: function setStatusToNormal() {
        this.jQDom.show().prop('disabled', false).find('#loadmore-btn--loading').hide().end().find('#loadmore-btn--normal').fadeIn('slow');
    },

    // Hide Load More button if projects numbers are <= 10
    setStatusToNoMore: function setStatusToNoMore() {
        this.jQDom.hide();
    }
};

// Insert HTML
var renderDom = function renderDom(dataObj) {
    var tagLiHtml = '',
        tagClassList = dataObj.tags.join(' ');

    $.each(dataObj.tags, function (key, value) {
        // Tags of each card
        tagLiHtml += '<li>' + value + '</li>';
    });

    return '<div class="mix code-card ' + tagClassList + '" id="data-' + dataObj.id + '" data-order="' + dataObj.id + '">\n                <a class="card-url" href="' + dataObj.url + '" target="_blank">\n                    <img class="card-img" src="' + dataObj.image + '">\n                </a>\n            <div class="card-textarea">\n                <h3 class="card-title">\n                    <a class="card-title-url" href="' + dataObj.url + '" target="_blank">' + dataObj.title + '</a>\n                </h3>\n                <p class="card-description">' + dataObj.desc + '</p>\n                <div class="card-alltags">\n                    <i class="card-tagicon fa fa-tags"></i>\n                    <ul class="card-tag">' + tagLiHtml + '</ul>\n                </div>\n            </div>\n            <a class="card-btn-url" href="' + dataObj.url + '" target="_blank">\n                <button type="button" class="card-btn">View Demo</button>\n            </a>';
};

// 篩選資料並填至畫面上
var filter = function filter(category_string) {
    if (!dataCollections.urlTags) {
        // 以防沒資料時出錯
        console.error('missing "urlTags" data');
        return false;
    }

    loadMoreBtnObj.setStatusToLoading();

    var page = loadMoreBtnObj.getPage();
    var categoryIds = dataCollections.urlTags[category_string].sort(function (a, b) {
        return b - a;
    }) // Sort form max to min
    .slice(page * numberOfPagesPerPage, (page + 1) * numberOfPagesPerPage); // 分割資料為了分頁功能

    if (categoryIds.length < numberOfPagesPerPage) {
        loadMoreBtnObj.setStatusToNoMore();
    } else {
        loadMoreBtnObj.setStatusToNormal();
    }

    loadMoreBtnObj.setPage(page + 1);

    for (var i in categoryIds) {
        currentDisplayCollections.push(dataCollections.urlData[categoryIds[i]]);
    }

    mixer.dataset(currentDisplayCollections);
};

// Initialize Mixitiup
var initMixitup = function initMixitup() {
    $.get(dataUrls, function (datas) {
        dataCollections = datas;

        mixer = mixitup('.code-work', {
            data: {
                uidKey: 'id'
            },
            render: {
                target: renderDom
            },
            load: {
                sort: 'order:desc'
            }
        });

        // 第一次執行，預設使用 `all` filter
        $('button[value="' + currentFilterValue + '"]').click();
    }, 'json');
};

$(function () {
    initMixitup();

    $('.filter-btn').click(function () {
        $('.filter-btn').removeClass('filter-btn-isActive');
        $(this).addClass('filter-btn-isActive');

        currentFilterValue = this.value;
        loadMoreBtnObj.setPage(0); // Page number set to 0
        currentDisplayCollections = []; // 和前次選則不同，清除資料暫存包
        filter(this.value);
    });

    // Load more contents
    loadMoreBtnObj.jQDom.click(function () {
        filter(currentFilterValue);
    });
});
'use strict';

var navbar = $('.menu-isFixed'),
    windowCurrentTop = 0,
    windowLastTop = 0,
    scrollDelta = 10,
    scrollOffset = 150,
    isMobile = false,
    rootContainer,
    containerMobile = $('html, body'),
    containerDesk = $('main'),
    menuItem = $('.navMain-items a'),
    scrollSpeed = 1000;

// --------------------------------------
// Auto-hiding sticky navbar
// --------------------------------------
function autoHideNav() {
    windowCurrentTop = $(this).scrollTop();

    if (windowLastTop - windowCurrentTop > scrollDelta) {
        navbar.removeClass('menu-isHidden');
    } else if (windowCurrentTop - windowLastTop > scrollDelta && windowCurrentTop > scrollOffset) {
        navbar.addClass('menu-isHidden');
    }

    windowLastTop = windowCurrentTop;
}

$(window).on('scroll', autoHideNav);

// --------------------------------------
// Check Devices and choose its container
// --------------------------------------
function isMobileDevice() {
    var menuPosition = $('.menu').css('position');
    isMobile = false;

    if (menuPosition === 'fixed') {
        isMobile = true;
    }

    // Choose the container for scrolling according to the device
    rootContainer = isMobile ? containerMobile : containerDesk;
}

// --------------------------------------
// Smooth Scrolling
// --------------------------------------
function smoothScrolling(e) {

    e.preventDefault();

    var menuSection = $(this.hash),
        currentScrollTop = rootContainer.scrollTop(),
        nextScrollTop = currentScrollTop + menuSection.offset().top;

    // Scroll smoothly
    rootContainer.stop().animate({ 'scrollTop': nextScrollTop }, scrollSpeed);

    if (Math.abs(menuSection.offset().top) <= 1) {
        return false;
    }

    menuItem.removeClass('navMain-items-isActive');

    $(this).addClass('navMain-items-isActive');
}

// --------------------------------------
// Change menu color while scrolling
// --------------------------------------
function menuScrolling() {

    // each，檢查每個 menu 連結的位置
    $('.navMain-items a').each(function () {
        var $linkMenu = $(this),
            $section = $(this.hash),


        // 取得這個 section 與可視畫面頂端的距離
        // 負數 : 表示在可視畫面上方
        // 正數 : 表示在可視畫下方或可視畫面內
        sectionDistance = $section.offset().top,


        // 因為有 border 和 margin 寬度，所以使用 outerHeight()，才能拿到這個 section 真正佔用的畫面高度
        sectionHeight = $section.outerHeight();

        if (sectionDistance <= 1 && // 目前 section 位置必須在可視畫面上方
        sectionHeight - Math.abs(sectionDistance) > 0 // section 高度減去 section 頂端位置大於 0 表示可視畫面在該 section 內
        ) {
                $linkMenu.addClass('navMain-items-isActive');
            } else {
            $linkMenu.removeClass('navMain-items-isActive');
        }
    });
}

// --------------------------------------
// Auto Typing Hello
// --------------------------------------
var TitleRotate = function TitleRotate(el, typing, period) {
    this.el = el;
    this.typing = typing;
    this.period = parseInt(period, 10) || 1500;
    this.loopNum = 0;
    this.text = '';
    this.tick();
    this.isDeleting = false;
};

TitleRotate.prototype.tick = function () {
    var i = this.loopNum % this.typing.length,
        fullText = this.typing[i],
        that = this,
        delta = 200 - Math.random() * 100;

    if (this.isDeleting) {
        this.text = fullText.substring(0, this.text.length - 1);
    } else {
        this.text = fullText.substring(0, this.text.length + 1);
    }

    this.el.innerHTML = '<span class="wrap">' + this.text + '</span>';

    if (this.isDeleting) {
        delta /= 2;
    }

    if (!this.isDeleting && this.text === fullText) {
        delta = this.period;
        this.isDeleting = true;
    } else if (this.isDeleting && this.text === '') {
        this.isDeleting = false;
        this.loopNum++;
        delta = 500;
    }

    setTimeout(function () {
        that.tick();
    }, delta);
};

var TitleRotateLaunch = function TitleRotateLaunch() {
    var elements = document.getElementsByClassName('intro-title'),
        css = document.createElement('style');

    for (var i = 0; i < elements.length; i++) {
        var typingText = elements[i].getAttribute('data-text'),
            typingPeriod = elements[i].getAttribute('data-period');

        if (typingText) {
            new TitleRotate(elements[i], JSON.parse(typingText), typingPeriod);
        }
    }

    // Inject CSS
    css.type = 'text/css';
    css.innerHTML = '.intro-title > .wrap { border-right: .5rem solid #4ECDC4}';
    document.body.appendChild(css);
};

// --------------------------------------
// Change Form Subject & Textarea
// --------------------------------------
function changeSubject() {
    var option = $('#form-subject option:selected').val(),
        formBodyDefault = $('#form-body-default'),
        formBodyNew = $('#form-body-new');

    formBodyDefault.css('display', 'none');

    if (option === '1') {
        formBodyNew.html('Hi Pamcy,<br><textarea name="form-body-message" rows="5" placeholder="Your message here" >');
    } else if (option === '2') {
        formBodyNew.html('Hi Pamcy,<br>I\'m from <input type="text" name="company" placeholder="Your Company Name" required>, we are looking for Front-End Developer just like you. Here are some details of this job.<textarea name="form-body-message" rows="5" placeholder="You are responsible for..." >');
    }
}

// --------------------------------------
// Document Ready
// --------------------------------------
$(document).ready(function () {
    // Check if user on mobile device
    isMobileDevice();

    // Must put after isMobileDevice()
    rootContainer.on('scroll', menuScrolling);

    // Resize Window and mobile detect
    $(window).on('resize', isMobileDevice);

    // Auto Typing Hello
    TitleRotateLaunch();

    // Smooth Scrolling
    $('a[href^="#"]').on('click', smoothScrolling);

    // Change form subject
    $('#form-subject').on('change', changeSubject);
});